name: Deploy to EKS using ArgoCD

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  packages: read
  deployments: read
  issues: write

jobs:
  create-update-eks-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev]
        account_id: [12345678900, 12345678901]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: 1.9.0

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          audience: sts.amazonaws.com
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::${{matrix.account_id}}:role/my-github-actions-role
    
      - name: Initialize Terraform
        working-directory: ./terraform/environments/${{ matrix.environment }}
        run: terraform init
  
      - name: Apply Terraform
        working-directory: ./terraform/environments/${{ matrix.environment }}
        run: terraform apply -auto-approve
  
  manual-approval-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1.9.1
        with:
          timeout-minutes: 60
          approvers: my-team
          secret: ${{ secrets.GITHUB_TOKEN }}
  
  deliver-apps-dev:
    runs-on: ubuntu-latest
    needs: manual-approval-dev
    steps:      
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure kubectl
        id: configure-kubectl
        run: |
          aws eks update-kubeconfig --region eu-central-1 --name ${{matrix.environment}}-cluster

      - name: Initialize Terraform
        working-directory: ./terraform/environments/${{matrix.environment}}
        run: terraform init

      - name: Apply Terraform
        id: apply
        working-directory: ./terraform/environments/${{matrix.environment}}
        run: |
          terraform apply -auto-approve
          echo "{argocd_admin_password}={$(terraform output -raw argocd_admin_password)}" >> GITHUB_ENV

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Login to ArgoCD
        run: |
          argocd login ${{env.ARGOCD_HOST}} --username ${{env.ARGOCD_CICD_USER}} --password  ${{ steps.apply.outputs.argocd_admin_password }}

      - name: Sync Application with ArgoCD
        run: |
          argocd app sync ${{matrix.environment}}-app

  block-prod-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1.9.1
        with:
          timeout-minutes: 60
          approvers: my-team-lead
          secret: ${{ secrets.GITHUB_TOKEN }}

  create-update-eks-prod:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [prod]
        account_id: [12345678910, 12345678911, 12345678912]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: 1.9.0

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          audience: sts.amazonaws.com
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::${{matrix.account_id}}:role/my-github-actions-role
    
      - name: Initialize Terraform
        working-directory: ./terraform/environments/${{ matrix.environment }}
        run: terraform init
  
      - name: Apply Terraform
        working-directory: ./terraform/environments/${{ matrix.environment }}
        run: terraform apply -auto-approve

  manual-approval-prod:
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1.9.1
        with:
          timeout-minutes: 60
          approvers: my-team
          secret: ${{ secrets.GITHUB_TOKEN }}
  
  deliver-apps-prod:
    runs-on: ubuntu-latest
    needs: manual-approval-prod
    steps:      
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure kubectl
        id: configure-kubectl
        run: |
          aws eks update-kubeconfig --region eu-central-1 --name ${{matrix.environment}}-cluster

      - name: Initialize Terraform
        working-directory: ./terraform/environments/${{matrix.environment}}
        run: terraform init

      - name: Apply Terraform
        id: apply
        working-directory: ./terraform/environments/${{matrix.environment}}
        run: |
          terraform apply -auto-approve
          echo "{argocd_admin_password}={$(terraform output -raw argocd_admin_password)}" >> GITHUB_ENV

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Login to ArgoCD
        run: |
          argocd login ${{env.ARGOCD_HOST}} --username ${{env.ARGOCD_CICD_USER}} --password ${{ steps.apply.outputs.argocd_admin_password }}

      - name: Sync Application with ArgoCD
        run: |
          argocd app sync ${{matrix.environment}}-app